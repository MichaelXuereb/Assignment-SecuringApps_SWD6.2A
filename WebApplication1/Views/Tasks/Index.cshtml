@model IEnumerable<ShoppingCart.Application.ViewModels.TaskViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@{
    if (User.IsInRole("TEACHER"))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
        }
    }
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Deadline)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deadline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @{
                        if (User.IsInRole("TEACHER"))
                        {
                            <p>
                                @Html.ActionLink("Student Uploads", "TeacherSub", "Submission", new { id = WebApplication1.Utility.Encryption.SymmetricEncrypt(item.Id.ToString()) }) |
                                @Html.ActionLink("Upload", "Upload", "Submission", new { idEnc = WebApplication1.Utility.Encryption.SymmetricEncrypt(item.Id.ToString()) })

                            </p>
                        }
                        else
                        {
                            @Html.ActionLink("Upload", "Upload", "Submission", new { idEnc = WebApplication1.Utility.Encryption.SymmetricEncrypt(item.Id.ToString()) })
                        }
                    }


                </td>
            </tr>
        }
    </tbody>
</table>
