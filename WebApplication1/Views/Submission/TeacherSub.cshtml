@model IEnumerable<ShoppingCart.Application.ViewModels.SubmissionViewModel>

@{
    ViewData["Title"] = "TeacherSub";
}

@{
    List<string> list = new List<string>();

    foreach (var item in Model)
    {
        list.Add(item.Signature);
    }

    var query = list.GroupBy(x => x)
              .Where(g => g.Count() > 1)
              .Select(y => y.Key)
              .ToList();

}

    <h1>TeacherSub</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.File)
                </th>
                <th>
                    @Html.DisplayName("Flag")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.File)
                </td>
                <td>
                    @{
                        if (query.Contains(item.Signature)){
                            <p>COPIED</p>
                        }
                        else
                        {
                            <p>NOT</p>
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.ActionLink("Comments", "Create", "Comment", new { idEnc = WebApplication1.Utility.Encryption.SymmetricEncrypt(item.Id.ToString()) }) |
                    @Html.ActionLink("Download File", "Download", "Submission", new { idEnc = WebApplication1.Utility.Encryption.SymmetricEncrypt(item.Id.ToString()) })
                </td>
            </tr>
            }
        </tbody>
    </table>
